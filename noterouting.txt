SPECIAL FILES FOR NEXTJS ROUTING
page.tsx
layout.tsx
loading.tsx
route.tsx
not-found.tsx
error.tsx

Only the page file is publicly accessible
other files are not exposed to the client
use the app directory to co-locate our page files and other building blocks of out project

Dynamic Routes - a route with a PARAMETER
create a folder with [param] with a page.tsx
in order to access route parameters, pass props
- this only works on page.tsx. if its another component, it needs to be passed from the page

Catch-all segments 
- if we have a varying number of parameters, we dont need to create a bunch of nested folders
- instead prefix the folder name w/ ... [...name]
- to make the parameter optional (routing to the base) wrap in double square brackets [[...slug]]
- params

Query String Parameters - a way to pass information to the server as part of a URL
- use searchParams
- a way to pass state on the server
- <Link href="/users?sortOrder=name">Name</Link>

Fast Sort - library for sorting data
npm i fast-sort

Layout - layout.tsx
- a layout component should have children of type ReactNode.
- TS will need an interface

Link component - only dls the content of the target page
- pre fetches links that are in the viewport
- caches pages on the client

*Dont use useRouter from next/router - import it from next/navigation

Suspense - show a fallback ui while a component is being rendered, while we wait for it to fetch the data
- wrap the component in a <Suspense fallback={<div>Loading...</div>}>
- streaming - doesnt interrupt seo, uploads to client, and uploads more when the data has rendered
- same as streaming video/auio, we can stream HTML content

not-found - use a not found page to customize the message for a bad url

unexpected errors - create a custom error page

look into Sentry for login services https://sentry.io/
 - can send error objects to sentry for persistance
 